<!DOCTYPE html>
<html>
<head>
    <title>Restaurant Menu</title>
    <style>
        /* Reset and base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background-color: #f7fafc;
            color: #2d3748;
            line-height: 1.6;
        }

        /* Header styles */
        .header {
            background: linear-gradient(135deg, #2d3748 0%, #1a202c 100%);
            color: white;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }

        .top-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        .confirm-order-btn, .view-orders-btn {
            background-color: #ed8936;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            cursor: pointer;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .confirm-order-btn:hover, .view-orders-btn:hover {
            background-color: #dd6b20;
            transform: translateY(-2px);
        }

        /* Order info */
        .order-info {
            background-color: #edf2f7;
            padding: 1rem;
            text-align: center;
            border-bottom: 2px solid #e2e8f0;
        }

        /* Cart styles */
        .cart-container {
            background-color: white;
            border-radius: 1rem;
            padding: 2rem;
            margin: 2rem auto;
            max-width: 800px;
            box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1);
        }

        .cart-container h2 {
            color: #2d3748;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #edf2f7;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            border-bottom: 1px solid #edf2f7;
            transition: background-color 0.2s ease;
        }

        .cart-item:hover {
            background-color: #f7fafc;
        }

        .cart-item input[type="number"] {
            width: 4rem;
            padding: 0.5rem;
            border: 2px solid #e2e8f0;
            border-radius: 0.5rem;
            margin: 0 0.5rem;
        }

        .cart-total {
            font-size: 1.25rem;
            font-weight: bold;
            text-align: right;
            margin-top: 1.5rem;
            padding-top: 1rem;
            border-top: 2px solid #edf2f7;
        }

        /* Menu styles */
        .menu-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .menu-item {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .menu-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1);
        }

        .menu-item h3 {
            color: #2d3748;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .price {
            color: #ed8936;
            font-size: 1.5rem;
            font-weight: bold;
            margin: 0.5rem 0;
        }

        .quantity-input {
            width: 4rem;
            padding: 0.5rem;
            border: 2px solid #e2e8f0;
            border-radius: 0.5rem;
            margin-right: 0.5rem;
        }

        .add-to-cart-btn {
            background-color: #48bb78;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .add-to-cart-btn:hover {
            background-color: #38a169;
            transform: translateY(-2px);
        }

        .update-cart-btn {
            background-color: #4a5568;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .remove-item-btn {
            background-color: #f56565;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            font-weight: 600;
            margin-left: 0.5rem;
            transition: all 0.3s ease;
        }

        .update-cart-btn:hover {
            background-color: #2d3748;
        }

        .remove-item-btn:hover {
            background-color: #e53e3e;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }

            .menu-container {
                grid-template-columns: 1fr;
                padding: 1rem;
            }

            .cart-item {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }

            .top-buttons {
                flex-direction: column;
            }

            .cart-container {
                margin: 1rem;
                padding: 1rem;
            }
        }

        /* Animations */
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .menu-item {
            animation: slideIn 0.3s ease-out forwards;
        }

        .menu-item:nth-child(2n) {
            animation-delay: 0.1s;
        }

        .menu-item:nth-child(3n) {
            animation-delay: 0.2s;
        }
    </style>
<body>
    <div class="header">
        <h1>Our Menu</h1>
        <h2>*Please reload the page after completing payment!</h2>
        <div class="top-buttons">
            <button class="confirm-order-btn" onclick="confirmOrder()">
                Confirm Order
            </button>
            <a href="/customerViewOrder?orderId=<%= orderId %>" class="view-orders-btn">View My Order</a>
        </div>
    </div>

    <div class="order-info">
        <p class="order-id">Order ID: <%= orderId %></p>
    </div>

    <!-- Add Shopping Cart Section -->
    <div class="cart-container">
        <h2>Shopping Cart</h2>
        <div id="cart-items">
            <!-- Cart items will be displayed here -->
        </div>
        <div class="cart-total">
            Total: $<span id="cart-total">0.00</span>
        </div>
    </div>

    <div class="menu-container">
        <% menuItems.forEach(item => { %>
            <div class="menu-item">
                <h3><%= item.name %></h3>
                <div class="price">$<%= item.price %></div>
                <div>
                    <input 
                        type="number" 
                        class="quantity-input"
                        min="1" 
                        value="1" 
                        required>
                    <button onclick="addToCart('<%= item._id %>', '<%= item.name %>', <%= item.price %>)" class="add-to-cart-btn">
                        Add to Cart
                    </button>
                </div>
            </div>
        <% }) %>
    </div>

    <script>
        let cart = [];

        function addToCart(id, name, price) {
            const quantityInput = event.target.parentElement.querySelector('.quantity-input');
            const quantity = parseInt(quantityInput.value);
            
            const existingItem = cart.find(item => item.id === id);
            if (existingItem) {
                existingItem.quantity += quantity;
            } else {
                cart.push({
                    id: id,
                    name: name,
                    price: price,
                    quantity: quantity
                });
            }
            
            updateCartDisplay();
        }

        function updateCartDisplay() {
            const cartContainer = document.getElementById('cart-items');
            cartContainer.innerHTML = '';
            
            let total = 0;
            
            cart.forEach((item, index) => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;
                
                const itemElement = document.createElement('div');
                itemElement.className = 'cart-item';
                itemElement.innerHTML = `
                    <span>${item.name}</span>
                    <span>
                        <input type="number" value="${item.quantity}" min="1" 
                            onchange="updateQuantity(${index}, this.value)">
                        x $${item.price}
                        <button onclick="removeItem(${index})" class="remove-item-btn">Remove</button>
                    </span>
                `;
                cartContainer.appendChild(itemElement);
            });
            
            document.getElementById('cart-total').textContent = total.toFixed(2);
        }

        function updateQuantity(index, newQuantity) {
            cart[index].quantity = parseInt(newQuantity);
            updateCartDisplay();
        }

        function removeItem(index) {
            cart.splice(index, 1);
            updateCartDisplay();
        }

        function confirmOrder() {
    if (cart.length === 0) {
        alert('Your cart is empty!');
        return;
    }

    fetch('/confirm-order', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            orderId: '<%= orderId %>',
            items: cart
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Submit Successful!');
            // Clear the cart
            cart = [];
            updateCartDisplay();
            // Reload the current page
            window.location.reload();
        } else {
            alert('Error confirming order');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error confirming order');
    });
}
    </script>
    <body>
</html>
