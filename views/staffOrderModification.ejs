<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Modification</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f0f0f0;
        }
        .order-card {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .order-header {
            display: flex;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }
        .item-list {
            list-style: none;
            padding: 0;
        }
        .item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }
        .status-select {
            padding: 5px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
        .delete-btn {
            background-color: #ff4444;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
        }
        .add-item-form {
            margin-top: 10px;
            padding: 10px;
            background-color: #f8f8f8;
            border-radius: 4px;
        }
        .add-item-form input, .add-item-form select {
            margin: 5px;
            padding: 5px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
        .submit-btn {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
        }
        
        .nav-bar {
            background-color: #2c3e50;
            padding: 15px 20px;
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

        .nav-items {
            display: flex;
            gap: 5px;
        }

        .nav-link {
            text-decoration: none;
            color: white;
            font-size: 16px;
            padding: 10px 25px;
            border-radius: 4px;
            transition: all 0.2s ease;
            background-color: #34495e;
        }

        .nav-link:hover {
            background-color: #3498db;
        }

        .nav-link.active {
            background-color: #3498db;
            font-weight: 500;
        }
    </style>
</head>
<body>
    <nav class="nav-bar">
        <div class="nav-items">
            <a href="/menuManagement" class="nav-link">Menu Management</a>
            <a href="/staffOrderModification" class="nav-link">Order Modification</a>
            <a href="/staffPaymentSystem" class="nav-link">Payment System</a>
            <a href="/staffHistorialOrder" class="nav-link">Order History</a>
            <a href="/staffLogin" class="nav-link">Sign Out</a>
        </div>
    </nav>
    <h1>Order Modification</h1>

    <% orders.filter(order => order.paymentStatus === 'unpaid').forEach(order => { %>
        <div class="order-card">
            <div class="order-header">
                <div>
                    <h3>Order ID: <%= order._id %></h3>
                    <p>Table: <%= order.seat %></p>
                    <p>People: <%= order.numberOfPeople %></p>
                    <p>Time: <%= new Date(order.time).toLocaleString() %></p>
                </div>
            </div>

            <h4>Current Items:</h4>
            <ul class="item-list">
                <% order.items.forEach((item, index) => { %>
                    <li class="item">
                        <span><%= item.name %> x<%= item.quantity %> ($<%= item.price %>)</span>
                        <div>
                            <select class="status-select" onchange="updateStatus('<%= order._id %>', <%= index %>, this.value)">
                                <option value="preparing" <%= item.status === 'preparing' ? 'selected' : '' %>>Preparing</option>
                                <option value="delivering" <%= item.status === 'delivering' ? 'selected' : '' %>>Delivering</option>
                                <option value="completed" <%= item.status === 'completed' ? 'selected' : '' %>>Completed</option>
                            </select>
                            <button class="delete-btn" onclick="deleteItem('<%= order._id %>', <%= index %>)">Delete</button>
                        </div>
                    </li>
                <% }) %>
            </ul>

            <div class="add-item-form">
                <h4>Add New Item:</h4>
                <form onsubmit="addItem(event, '<%= order._id %>')">
                    <input type="text" name="name" placeholder="Item Name" required>
                    <input type="number" name="quantity" placeholder="Quantity" min="1" required>
                    <input type="number" name="price" placeholder="Price" step="0.01" min="0" required>
                    <button type="submit" class="submit-btn">Add Item</button>
                </form>
            </div>
        </div>
    <% }) %>

    <script>
        async function updateStatus(orderId, itemIndex, newStatus) {
            try {
                const response = await fetch('/updateItemStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, itemIndex, newStatus })
                });
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Failed to update status');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating status');
            }
        }

        async function deleteItem(orderId, itemIndex) {
            if (!confirm('Are you sure you want to delete this item?')) return;

            try {
                const response = await fetch('/deleteOrderItem', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, itemIndex })
                });
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Failed to delete item');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error deleting item');
            }
        }

        async function addItem(event, orderId) {
            event.preventDefault();
            const formData = new FormData(event.target);
            
            try {
                const response = await fetch('/addOrderItem', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId,
                        name: formData.get('name'),
                        quantity: parseInt(formData.get('quantity')),
                        price: parseFloat(formData.get('price'))
                    })
                });
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Failed to add item');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error adding item');
            }
        }
    </script>
</body>
</html>
