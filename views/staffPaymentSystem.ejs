<!DOCTYPE html>
<html>
<head>
    <title>Restaurant Management System</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f5f7fa;
        }

        .nav-bar {
            background-color: #2c3e50;
            padding: 15px 20px;
            display: flex;
            justify-content: center;
        }

        .nav-items {
            display: flex;
            gap: 5px;
        }

        .nav-link {
            text-decoration: none;
            color: white;
            font-size: 16px;
            padding: 10px 25px;
            border-radius: 4px;
            transition: all 0.2s ease;
            background-color: #34495e;
        }

        .nav-link:hover {
            background-color: #3498db;
        }

        .nav-link.active {
            background-color: #3498db;
            font-weight: 500;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .title {
            color: #2c3e50;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #e1e8ee;
        }

        .orders-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .order-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            transition: transform 0.2s;
        }

        .order-card:hover {
            transform: translateY(-2px);
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .seat-number {
            font-size: 1.2em;
            font-weight: bold;
            color: #2c3e50;
        }

        .order-time {
            color: #7f8c8d;
            font-size: 0.9em;
        }

        .order-details {
            margin-bottom: 15px;
        }

        .people-count {
            color: #34495e;
            margin-bottom: 10px;
        }

        .items-list {
            margin-bottom: 15px;
        }

        .item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
            color: #2c3e50;
        }

        .total-amount {
            font-size: 1.2em;
            font-weight: bold;
            color: #e74c3c;
            margin-bottom: 15px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .payment-section {
            margin-top: 15px;
        }

        .payment-select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 0.9em;
        }

        .pay-button {
            width: 100%;
            padding: 10px;
            background-color: #2ecc71;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.2s;
        }

        .pay-button:hover {
            background-color: #27ae60;
        }

        .pay-button:disabled {
            background-color: #bdc3c7;
            cursor: not-allowed;
        }

        .empty-message {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
            font-size: 1.2em;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        }

        @media (max-width: 768px) {
            .orders-grid {
                grid-template-columns: 1fr;
            }

            .order-card {
                margin-bottom: 15px;
            }
        }

        @media (max-width: 600px) {
            .nav-items {
                flex-direction: column;
                gap: 10px;
                width: 100%;
            }

            .nav-link {
                text-align: center;
                display: block;
            }
        }
    </style>
</head>
<body>
    <nav class="nav-bar">
        <div class="nav-items">
            <a href="/menu" class="nav-link">Menu Management</a>
            <a href="/orders" class="nav-link">Order Modification</a>
            <a href="/payment" class="nav-link">Payment System</a>
            <a href="/history" class="nav-link">Historical Orders</a>
            <a href="/logout" class="nav-link">Sign Out</a>
        </div>
    </nav>

    <div class="container">
        <h1 class="title">Unpaid Orders Management</h1>
        
        <% if (orders && orders.length > 0) { %>
            <div class="orders-grid">
                <% orders.forEach(order => { %>
                    <div class="order-card">
                        <div class="order-header">
                            <span class="seat-number">Seat: <%= order.seat %></span>
                            <span class="order-time"><%= new Date(order.time).toLocaleString() %></span>
                        </div>

                        <div class="order-details">
                            <div class="people-count">
                                Number of People: <%= order.numberOfPeople %>
                            </div>

                            <div class="items-list">
                                <% order.items.forEach(item => { %>
                                    <div class="item">
                                        <span><%= item.name %> x <%= item.quantity %></span>
                                        <span>$<%= (item.price * item.quantity).toFixed(2) %></span>
                                    </div>
                                <% }) %>
                            </div>

                            <div class="total-amount">
                                Total: $<%= order.items.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2) %>
                            </div>
                        </div>

                        <div class="payment-section">
                            <select class="payment-select" id="payment-method-<%= order._id %>">
                                <option value="">Select Payment Method</option>
                                <option value="cash">Cash</option>
                                <option value="credit">Credit Card</option>
                                <option value="mobile">Mobile Payment</option>
                            </select>

                            <button 
                                class="pay-button" 
                                onclick="processPayment('<%= order._id %>')"
                                id="pay-button-<%= order._id %>">
                                Process Payment
                            </button>
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } else { %>
            <div class="empty-message">
                No unpaid orders at the moment.
            </div>
        <% } %>
    </div>

    <script>
        // Handle active state for current page
        const currentPath = window.location.pathname;
        document.querySelectorAll('.nav-link').forEach(link => {
            if (link.getAttribute('href') === currentPath) {
                link.classList.add('active');
            }
        });

        // Handle payment button disabled state
        document.querySelectorAll('.payment-select').forEach(select => {
            const orderId = select.id.split('-')[2];
            const button = document.getElementById(`pay-button-${orderId}`);
            button.disabled = true;

            select.addEventListener('change', () => {
                button.disabled = !select.value;
            });
        });

        async function processPayment(orderId) {
            const paymentMethod = document.getElementById(`payment-method-${orderId}`).value;
            if (!paymentMethod) {
                alert('Please select a payment method');
                return;
            }

            try {
                const response = await fetch(`/api/orders/${orderId}/pay`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ paymentMethod })
                });

                if (response.ok) {
                    const result = await response.json();
                    alert('Payment processed successfully');
                    location.reload();
                } else {
                    throw new Error('Payment failed');
                }
            } catch (error) {
                alert('Error processing payment: ' + error.message);
            }
        }
    </script>
</body>
</html>
